# Configuration file

asteroid {
    # Multiplier changing how much total material is brought back from a mining mission
    D:miningMissionMultiplier=1.0

    # List of oredictionary names of ores allowed to spawn in asteriods
    S:standardOres <
        oreIron
        oreGold
        oreCopper
        oreTin
        oreRedstone
        oreSilver
     >
}


biomes {
    I:alienForestBiomeId=91
    I:crystalChasmsBiomeId=95
    I:deepSwampBiomeId=96
    I:hotDryBiome=92
    I:marsh=97
    I:moonBiomeId=90
    I:oceanSpires=98
    I:spaceBiomeId=93
    I:stormLandsBiomeId=94
}


general {
    # How many power unit one EU makes
    I:EUPowerMultiplier=7

    # If true, allows players being hurt due to lack of oxygen and allows effects from non-standard atmosphere types
    B:EnableAtmosphericEffects=true

    # Multiplier for the build speed of the Rocket Builder (0.5 is twice as fast 2 is half as fast
    D:buildSpeedMultiplier=1.0

    # Should Electric Mushrooms be able to spawn lightning
    B:electricPlantsSpawnLightning=true

    # If true the machines from AdvancedRocketry will produce things like plates/rods for other mods even if Advanced Rocketry itself does not use the material (This can increase load time)
    B:makeMaterialsForOtherMods=true

    # How many units of fuel should each Dilithium Crystal give to warp ships
    I:pointsPerDilithium=500

    # Should the cutting machine be able to cut vanilla wood into planks
    B:sawMillCutVanillaWood=true

    # If true the Oxygen scrubbers require a consumable carbon collection cartridge
    B:scrubberRequiresCartrige=true

    # Dimension ID to use for space stations
    I:spaceStationId=-2

    # Amount of damage taken every second in a vacuum
    I:vacuumDamage=1
}


"mod interaction" {
    # If true Galaciticcraft's air will be disabled entirely requiring use of Advanced Rocketry's Oxygen system on GC planets
    B:OverrideGCAir=true
}


"ore generation" {
    I:CopperPerChunk=10
    I:CopperPerClump=6
    B:GenerateCopper=true
    B:GenerateRutile=true
    B:GenerateTin=true
    I:RutilePerChunk=6
    I:RutilePerClump=3
    I:TinPerChunk=10
    I:TinPerClump=6
}


performance {
    # BitMask: 0: no threading, radius based; 1: threading, radius based (EXP); 2: no threading volume based; 3: threading volume based (EXP)
    I:atmosphereCalculationMethod=0
}


planet {
    # Dimensions including and after this number are allowed to be made into planets [range: -127 ~ 127, default: 2]
    I:minDimension=2
}


rockets {
    # Multiplier for per-tank capacity
    D:fuelCapacityMultiplier=1.0

    # Set to false if rockets should not require fuel to fly
    B:rocketsRequireFuel=true

    # Multiplier for per-engine thrust
    D:thrustMultiplier=1.0
}


